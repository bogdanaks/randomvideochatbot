version: "3.9"
services:
  database:
    container_name: rvc_database
    image: "postgres:latest"
    volumes:
      - ./pg-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=randomvideochat
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    depends_on:
      - redis
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always
    networks:
      - app_network
  redis:
    container_name: rvc_redis
    image: redis:alpine
    volumes:
      - "./redis_data:/data"
    command: redis-server
    ports:
      - "6379:6379"
    restart: always
    networks:
      - app_network
  nginx:
    container_name: rvc_nginx
    ports:
      - "80:80"
      - "443:443"
      - "9000:9000"
    build:
      context: ./nginx
      dockerfile: Dockerfile
    volumes:
      - "./nginx:/app"
    restart: always
    depends_on:
      - client
      - server
    networks:
      - app_network
  client:
    container_name: rvc_client
    ports:
      - "3000:3000"
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    volumes:
      - "./frontend:/app"
      - "/app/node_modules"
    environment:
      - REACT_APP_API_URL=https://bogdanaks.ru
      - REACT_APP_TEST_MODE=true
      - REACT_APP_PEER_HOST=https://bogdanaks.ru
      - REACT_APP_PEER_PORT=9000
    restart: always
    networks:
      - app_network
  server:
    container_name: rvc_server
    depends_on:
      database:
        condition: service_healthy
    build:
      context: ./server
      dockerfile: Dockerfile
    volumes:
      - "./server:/app"
      - "/app/node_modules"
    environment:
      - PORT=5000
      - DB_USER=postgres
      - DB_HOST=database
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - DB_NAME=randomvideochat
      - DB_PASSWORD=postgres
      - DB_PORT=5432
      - TG_TOKEN=5972839269:AAG5vsu9Vfc_C44ZC04T8j5LM2UeLbhJfWc
      - SSL_KEY_PATH=./ssl/privkey.pem
      - SSL_CERT_PATH=./ssl/fullchain.pem
      - PEER_PORT=9000
      - PEER_PATH="/peerjs"
      - PEER_KEY="rvc"
    ports:
      - "5000:5000"
      - "9000:9000"
    restart: always
    networks:
      - app_network
networks:
  app_network:
    driver: bridge
